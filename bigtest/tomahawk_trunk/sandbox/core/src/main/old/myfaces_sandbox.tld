<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib xmlns="http://java.sun.com/JSP/TagLibraryDescriptor">
   <tlib-version>1.0.10</tlib-version>
   <jsp-version>1.2</jsp-version>
   <short-name>s</short-name>
   <uri>http://myfaces.apache.org/sandbox</uri>
   <description>
        Enhanced standard JSP actions and custom MyFaces actions.
    </description>
   <tag>
      <name>loadBundle</name>
      <tag-class>org.apache.myfaces.custom.loadbundle.LoadBundleTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extended loadbundle which does its job in all life-cycle phases or even on calling LoadBundle.loadBundle()
            - not only when rendering happens...</description>
      <attribute>
         <name>var</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Variable this bundle will be stored under, e.g. mybundle. Use #{mybundle.propertykey} or #{mybundle['propertykey']} to access the keys of the bundle.</description>
      </attribute>
      <attribute>
         <name>basename</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Path to the bundle-file in the class-path, e.g.: org.apache.myfaces.i18n.myprops</description>
      </attribute>
   </tag>
   <!-- xmlTemplate -->
   <tag>
      <name>xmlTemplate</name>
      <tag-class>org.apache.myfaces.custom.template.XmlTemplateTag</tag-class>
      <body-content>JSP</body-content>
      <description>Transforms XML using and XSL stylesheet.</description>
      <attribute>
         <name>content</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>String containing the XML content to be transformed.</description>
      </attribute>
      <attribute>
         <name>contentLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>String containing the location of the XML content to be transformed.</description>
      </attribute>
      <attribute>
         <name>contentStream</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Value binding expression referencing an InputStream from which the XML content
        is to be read.
    </description>
      </attribute>
      <attribute>
         <name>stylesheet</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>String containing the XSL information to use in the transformation.</description>
      </attribute>
      <attribute>
         <name>stylesheetLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>String containing the location of the XSL stylesheet to use in the transformation.</description>
      </attribute>
      <attribute>
         <name>styleStream</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Value binding expression referencing an InputStream from which the XSL stylesheet
        is to be read.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
   </tag>
   <!-- inputSuggest -->
   <tag>
      <name>inputSuggest</name>
      <tag-class>org.apache.myfaces.custom.suggest.InputSuggestTag</tag-class>
      <body-content>JSP</body-content>
      <description>Provides an input textbox with "suggest" functionality.</description>
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>javascriptLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find javascript resources.  If no values is specified, javascript will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <attribute>
         <name>imageLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find image resources.  If no values is specified, images will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <attribute>
         <name>styleLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find stylesheet resources.  If no values is specified, stylesheets will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <!--
        <attribute>
            <name>forceId</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <type>java.lang.String</type>
            <description>If true, this component will force the use of the specified id when rendering.</description>
        </attribute>
        -->
   </tag>
   <!-- valueChangeNotifier -->
   <tag>
      <name>valueChangeNotifier</name>
      <tag-class>org.apache.myfaces.custom.valueChangeNotifier.ValueChangeNotifierTag</tag-class>
      <body-content>JSP</body-content>
      <description>&lt;p&gt; Add a value change listener which will be fired AFTER UPDATE_MODEL. Only "method" valueChange listeners are supported currently.&lt;/p&gt;</description>
      <attribute>
         <name>method</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
   </tag>
   <!-- script -->
   <tag>
      <name>script</name>
      <tag-class>org.apache.myfaces.custom.script.ScriptTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>Script component</display-name>
      <description>Adds (java)script to the browser</description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>src</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                URL for script file.
            </description>
      </attribute>
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                type of script source
            </description>
      </attribute>
      <attribute>
         <name>language</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
				script language
			</description>
      </attribute>
   </tag>
   <!-- inputsuggestajax -->
   <tag>
      <name>inputSuggestAjax</name>
      <tag-class>org.apache.myfaces.custom.suggestajax.inputsuggestajax.InputSuggestAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>
                     Provides an input textbox with "suggest" functionality, using an ajax request
                     to the server.
        </description>
      <!-- all standard attributes of the inputText tag -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>maxlength</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The maximum number of characters allowed to be entered.</description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The initial width of this control, in characters.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>javascriptLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find javascript resources.  If no values is specified, javascript will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <attribute>
         <name>imageLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find image resources.  If no values is specified, images will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <attribute>
         <name>styleLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find stylesheet resources.  If no values is specified, stylesheets will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>displayValueOnly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If true, renders only the value of the component, but no input widget.
                Default is false.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style class used when displayValueOnly is true.
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <attribute>
         <name>suggestedItemsMethod</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Reference to the method which returns the suggested items</description>
      </attribute>
      <attribute>
         <name>maxSuggestedItems</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>optional attribute to identify the max size of suggested Values.
                 If specified in tableSuggestAjax, paginator functionality is used.
    </description>
      </attribute>
      <attribute>
         <name>charset</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Force the charset of the Response</description>
      </attribute>
      <attribute>
         <name>itemLabelMethod</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Method which gets a suggested Object as an argument
                         and returns a calculated String label. With this attribute it is possible
                         to achieve the same mechanism as it can be found at select menues with the label/value pair.
            </description>
      </attribute>
      <attribute>
         <name>autoComplete</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>If false, the input field is not automatically populated with the first suggested value.
                         Default: true
            </description>
      </attribute>
   </tag>
   <!-- Ajax child combobox  -->
   <tag>
      <name>ajaxChildComboBox</name>
      <tag-class>org.apache.myfaces.custom.ajaxchildcombobox.AjaxChildComboBoxTag</tag-class>
      <body-content>JSP</body-content>
      <description>
            Refreshes contents through an ajax call when the parent combo box's value is changed
        </description>
      <!-- UISelectOne attributes -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 select attributes -->
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>datafld</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>datasrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>dataformatas</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <!-- "multiple" cannot be set manually -->
      <!-- "name" cannot be set manually -->
      <!-- "size" cannot be set directly for it is a MenuRenderer specific attribute -->
      <!-- ListboxRenderer attributes -->
      <!-- 
<attribute>
    <name>size</name>
    <required>false</required>
    <rtexprvalue>false</rtexprvalue>
    <type>java.lang.String</type>
    <description>see JSF Spec.</description>
</attribute>
 -->
      <attribute>
         <name>enabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>disabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>escape</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Indicates whether rendered markup should be escaped.
                Default: true
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>displayValueOnly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If true, renders only the value of the component, but no input widget.
                Default is false.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style class used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>ajaxSelectItemsMethod</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Method to call via ajax to reload the combo box</description>
      </attribute>
      <attribute>
         <name>parentComboBox</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>id of the parent combo box</description>
      </attribute>
   </tag>
   <!-- tablesuggestajax -->
   <tag>
      <name>tableSuggestAjax</name>
      <tag-class>org.apache.myfaces.custom.suggestajax.tablesuggestajax.TableSuggestAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>Provides an input textbox with "suggest" functionality, using an ajax request
            to the server. The popUp contains a table where each column value can be set to a specific dom node (through dom node id).</description>
      <attribute>
         <name>betweenKeyUp</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If the time between two keyup events is lower than this given value,
        the ajax request will not be fired. In milliseconds. Prevents stressing the server with too much user inputs.
        In driven tests the component seems to be more stable if this value is set. A recommended value in which case
        the component works very well is about 300ms.  
    </description>
      </attribute>
      <attribute>
         <name>startRequest</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The AJAX Request is only triggered if the number of chars typed in is
                 equal or greater than this given value.
    </description>
      </attribute>
      <attribute>
         <name>var</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Same principle as it can be found in dataTable. SuggestedItemsMethod returns
                 a list of objects, where the class variables can be accessed with the alias after the
                 dot of the var.
    </description>
      </attribute>
      <attribute>
         <name>popupId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Id for the pop up window</description>
      </attribute>
      <attribute>
         <name>popupStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass for the window with a suggested list of items;pop up for each incoming Ajax response</description>
      </attribute>
      <attribute>
         <name>tableStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass for the suggested table.</description>
      </attribute>
      <attribute>
         <name>comboBoxStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass for dropdown box and arrow.</description>
      </attribute>
      <attribute>
         <name>rowStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass which applies to every row in the suggested table.</description>
      </attribute>
      <attribute>
         <name>evenRowStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass which only applies to even rows in the suggested table.</description>
      </attribute>
      <attribute>
         <name>oddRowStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass which only applies to odd rows in the suggested table.</description>
      </attribute>
      <attribute>
         <name>hoverRowStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass for the rows for onmouseover events.</description>
      </attribute>
      <!-- all standard attributes of the inputText tag -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>maxlength</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The maximum number of characters allowed to be entered.</description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The initial width of this control, in characters.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>javascriptLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find javascript resources.  If no values is specified, javascript will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <attribute>
         <name>imageLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find image resources.  If no values is specified, images will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <attribute>
         <name>styleLocation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                An alternate location to find stylesheet resources.  If no values is specified, stylesheets will
                be loaded from the resources directory using AddResource and ExtensionsFilter.
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>displayValueOnly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If true, renders only the value of the component, but no input widget.
                Default is false.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style class used when displayValueOnly is true.
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <attribute>
         <name>suggestedItemsMethod</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Reference to the method which returns the suggested items</description>
      </attribute>
      <attribute>
         <name>maxSuggestedItems</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>optional attribute to identify the max size of suggested Values.
                 If specified in tableSuggestAjax, paginator functionality is used.
    </description>
      </attribute>
      <attribute>
         <name>charset</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Force the charset of the Response</description>
      </attribute>
   </tag>
   <!-- focus -->
   <tag>
      <name>focus</name>
      <tag-class>org.apache.myfaces.custom.focus.HtmlFocusTag</tag-class>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
         The JSF id of the component to receive focus.
         </description>
      </attribute>
   </tag>
   <!-- form -->
   <tag>
      <name>form</name>
      <tag-class>org.apache.myfaces.custom.form.HtmlFormTag</tag-class>
      <body-content>JSP</body-content>
      <description>Renders a HTML form element which allow defining a different scheme, servername or port for the action url to which the form is submited</description>
      <!-- UIForm attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 form attributes -->
      <attribute>
         <name>target</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Names the frame that should display content generated by invoking this action. </description>
      </attribute>
      <attribute>
         <name>accept</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Provides a comma-separated list of content types that the 
        server processing this form can handle.
    </description>
      </attribute>
      <attribute>
         <name>acceptcharset</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: The list of character encodings accepted by the server for this
        form.
    </description>
      </attribute>
      <attribute>
         <name>enctype</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: The content type used to submit this form to the server.
    </description>
      </attribute>
      <attribute>
         <name>onreset</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when this form is reset.</description>
      </attribute>
      <attribute>
         <name>onsubmit</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when this form is submitted.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>scheme</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>This attribute can be used to set the url scheme for the action attribute</description>
      </attribute>
      <attribute>
         <name>serverName</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>This attribute can be used to set the url server name or ip address for the action attribute</description>
      </attribute>
      <attribute>
         <name>port</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>This attribute can be used to set the port for the action attribute</description>
      </attribute>
      <attribute>
         <name>action</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>This attribute can be used to set an entirely different action (might be something JSF-unspecific) to the form.</description>
      </attribute>
      <attribute>
         <name>method</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>This attribute can be used to set a method to the form which is different to the regular POST method used.</description>
      </attribute>
   </tag>
   <!-- Validators -->
   <!-- Validator for Url -->
   <tag>
      <name>validateUrl</name>
      <tag-class>org.apache.myfaces.custom.urlvalidator.ValidateUrlTag</tag-class>
      <body-content>JSP</body-content>
      <description>A custom validator for url format, based upons Jakarta Commons.</description>
      <!--
        This attribute indicates an alternate validation error message format string to display.
        -->
      <attribute>
         <name>message</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                alternate validation error message format string
            </description>
      </attribute>
   </tag>
   <!-- Validator for isbn codes -->
   <tag>
      <name>validateISBN</name>
      <tag-class>org.apache.myfaces.custom.isbnvalidator.ValidateISBNTag</tag-class>
      <body-content>JSP</body-content>
      <description>A custom validator for isbn codes, based upons Jakarta Commons.</description>
      <!--
        This attribute indicates an alternate validation error message format string to display.
        -->
      <attribute>
         <name>message</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                alternate validation error message format string
            </description>
      </attribute>
   </tag>
   <!-- Validator for comparing two component values -->
   <tag>
      <name>validateCompareTo</name>
      <tag-class>org.apache.myfaces.custom.comparetovalidator.ValidateCompareToTag</tag-class>
      <body-content>JSP</body-content>
      <description>Validation by comparing the value of this component with another component.</description>
      <!--
        This attribute indicates an alternate validation error message format string to display.
        -->
      <attribute>
         <name>message</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                alternate validation error message format string
            </description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
         The JSF id of the component with which to compare values.
         </description>
      </attribute>
      <attribute>
         <name>operator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
         Operator for comparison: 
			equals:                  eq, ==, =,
			not equals:              ne, !=,
			greater than:            gt, &gt;,
			less than:               lt, &lt;,
			greater than or equals:  ge, &gt;=,
			less than or equals:     le, &lt;=
         </description>
      </attribute>
      <attribute>
         <name>comparator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
         Value binding for an alternate java.util.Comparator object if component values don't implement Comparable
         </description>
      </attribute>
      <attribute>
         <name>alternateOperatorName</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
         custom operator name in error message (ie "after" instead of "greater than" for dates)
         </description>
      </attribute>
   </tag>
   <!-- autoUpdateDataTable -->
   <tag>
      <name>autoUpdateDataTable</name>
      <tag-class>org.apache.myfaces.custom.autoupdatedatatable.AutoUpdateDataTableTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extended data_table that adds some additional features to the standard data_table action: see attribute descriptions for preserveDataModel, sortColumn, sortAscending and preserveSort.</description>
      <!-- all standard attributes of the dataTable tag -->
      <!-- UIPanel attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>columnClasses</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        A comma separated list of CSS class names to apply to td elements in
        each column.
    </description>
      </attribute>
      <attribute>
         <name>footerClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class to be applied to footer cells.</description>
      </attribute>
      <attribute>
         <name>headerClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class to be applied to header cells.</description>
      </attribute>
      <attribute>
         <name>rowClasses</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        A comma separated list of CSS class names to apply to td elements in
        each row.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 table attributes -->
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>border</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the width of the border of this element, in pixels.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>bgcolor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The background color of this element.</description>
      </attribute>
      <attribute>
         <name>datafld</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>datasrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>dataformatas</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>cellpadding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Specifies the amount of empty space between the cell border and
        its contents.  It can be either a pixel length or a percentage.
    </description>
      </attribute>
      <attribute>
         <name>cellspacing</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Specifies the amount of space between the cells of the table.
        It can be either a pixel length or a percentage of available 
        space.
    </description>
      </attribute>
      <attribute>
         <name>frame</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Controls what part of the frame that surrounds a table is 
        visible.  Values include:  void, above, below, hsides, lhs, 
        rhs, vsides, box, and border.
    </description>
      </attribute>
      <attribute>
         <name>rules</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Controls how rules are rendered between cells.  Values include:
        none, groups, rows, cols, and all.
    </description>
      </attribute>
      <attribute>
         <name>summary</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Provides a summary of the contents of the table, for
        accessibility purposes.
    </description>
      </attribute>
      <attribute>
         <name>width</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        HTML: Specifies the desired width of the table, as a pixel length or
        a percentage of available space.
    </description>
      </attribute>
      <!-- UIData attributes -->
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>An EL expression that specifies the data model that backs this table.  The value can be of any type.
            
            A value of type DataModel is used directly.  Array-like parameters of type java.util.List, array of Object, 
            java.sql.ResultSet, or javax.servlet.jsp.jstl.sql.Result are wrapped in a DataModel.
            
            Other values are wrapped in a DataModel as a single row.</description>
      </attribute>
      <attribute>
         <name>var</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.</description>
      </attribute>
      <attribute>
         <name>rows</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The number of rows to be displayed.  Specify zero for all remaining rows in the table.</description>
      </attribute>
      <attribute>
         <name>first</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The index of the first row to be displayed, where 0 is the first row.</description>
      </attribute>
      <!-- MyFaces extensions -->
      <attribute>
         <name>preserveDataModel</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Indicates whether the state of the whole DataModel should be saved and
                restored. When set to false, the value-binding for the "value" attribute
                of this table is executed each time the page is rendered. When set to 
                true, that value-binding is only executed when the component is first
                created, and the DataModel state is thereafter saved/restored automatically
                by the component.
                
                When column sorting is used for a table this property needs to be false
                so that the DataModel can be updated to reflect any changes in the
                sort criteria.
                
                Default: false
            </description>
      </attribute>
      <attribute>
         <name>preserveRowStates</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Indicates whether the state for each row should not be discarded before 
                the datatable is rendered again. Setting this to true might be hepful if
                an input component inside the datatable has no valuebinding and the value
                entered in there should be displayed again. 
                This will only work reliable if the datamodel of the datatable did not change
                either by sorting, removing or adding rows.
                                
                Default: false 
            </description>
      </attribute>
      <attribute>
         <name>forceIdIndexFormula</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
				A formula that overrides the default row index in the construction of table's
				body components.
				Example : #{myRowVar.key}
				Warning, the EL should evaluate to a unique value for each row !
            </description>
      </attribute>
      <attribute>
         <name>sortColumn</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Value reference to a model property that gives the current sort column name.
                The target String property is set to the "columnName" of whichever column has been
                chosen to sort by, and the method which is bound to the "value" attribute
                of this table (ie which provides the DataModel used) is expected to use this
                property to determine how to sort the DataModel's contents.
            </description>
      </attribute>
      <attribute>
         <name>sortAscending</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Value reference to a model property that gives the current sort direction.
                The target Boolean property is set to true when the selected sortColumn
                should be sorted in ascending order, and false otherwise. The method which
                is bound to the "value" attribute of this table (ie which provides the DataModel
                used) is expected to use this property to determine how to sort the DataModel's
                contents.
            </description>
      </attribute>
      <attribute>
         <name>preserveSort</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Indicates whether the state of the sortColumn and sortAscending attribute
                should be saved and restored and written back to the model during the
                update model phase.
                Default: true
            </description>
      </attribute>
      <attribute>
         <name>renderedIfEmpty</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Indicates whether this table should be rendered if the underlying DataModel is
                empty.
                You could as well use rendered="#{not empty bean.list}", but this one causes
                the getList method of your model bean beeing called up to five times per
                request, which is not optimal when the list is backed by a DB table.
                Using renderedIfEmpty="false" solves this problem, because the MyFaces
                extended HtmlDataTable automatically caches the DataModel and calles the
                model getter only once per request.
                Default: true
            </description>
      </attribute>
      <attribute>
         <name>rowIndexVar</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                A parameter name, under which the current rowIndex is set in request scope
                similar to the var parameter.
            </description>
      </attribute>
      <attribute>
         <name>rowCountVar</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                A parameter name, under which the rowCount is set in request scope
                similar to the var parameter.
            </description>
      </attribute>
      <attribute>
         <name>previousRowDataVar</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                A parameter name, under which the previous RowData Object is set in request scope
                similar to the rowIndexVar and rowCountVar parameters.
                Mind that the value of this request scope attribute is null in the first row
                or when isRowAvailable returns false for the previous row.
            </description>
      </attribute>
      <attribute>
         <name>rowOnClick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onclick event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnDblClick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript ondblclick event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnMouseDown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onmpusedown event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnMouseUp</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onmouseup event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnMouseOver</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onmouseover event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnMouseMove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onmousemove event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnMouseOut</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onmouseout event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnKeyPress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onkeypress event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnKeyDown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onkeydown event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowOnKeyUp</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Defines a JavaScript onkeyup event handler for each table row
            </description>
      </attribute>
      <attribute>
         <name>rowId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                The id to use for &lt;tr&gt; elements that are generated by the table.
            </description>
      </attribute>
      <attribute>
         <name>rowStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Corresponds to the HTML class attribute for the row tr tag.</description>
      </attribute>
      <attribute>
         <name>rowStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Corresponds to the HTML style attribute for the row tr tag.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <attribute>
         <name>frequency</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines in seconds the interval of reloads. if no value is specified 2 seconds will be default.</description>
      </attribute>
      <attribute>
         <name>onSuccess</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Define javascript function to call after successful refresh.</description>
      </attribute>
   </tag>
   <!-- accordionPanel -->
   <tag>
      <name>accordionPanel</name>
      <tag-class>org.apache.myfaces.custom.accordion.HtmlAccordionPanelTag</tag-class>
      <body-content>JSP</body-content>
      <description>
			A group of panels, which can be opened and closed. See attribute layout for further description on how opening and closing works.

			Extends standard panelGroup by user role support.
		</description>
      <!-- all standard attributes of the panelGroup tag -->
      <!-- UIPanel attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!-- MyFaces extensions -->
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>displayValueOnly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If true, renders only the value of the component, but no input widget.
                Default is false.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style class used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>layout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				Defines the layout of this accordionPanel. If you set this to 'accordion', opening a panel will close all other panels. If you set this to 'toggling', opening a panel doesn't affect the state of the other panels. You can close a panel by
				clicking on the header of this panel a second time.
			</description>
      </attribute>
      <attribute>
         <name>expandedBackColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the background color for expanded state.</description>
      </attribute>
      <attribute>
         <name>expandedTextColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the text color for expanded state.</description>
      </attribute>
      <attribute>
         <name>expandedFontWeight</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the font weight for expanded state.</description>
      </attribute>
      <attribute>
         <name>collapsedBackColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the background color for collapsed state.</description>
      </attribute>
      <attribute>
         <name>collapsedTextColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the text color for collapsed state.</description>
      </attribute>
      <attribute>
         <name>collapsedFontWeight</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the font weight for collapsed state.</description>
      </attribute>
      <attribute>
         <name>hoverBackColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the background color on hover.</description>
      </attribute>
      <attribute>
         <name>hoverTextColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the text color on hover.</description>
      </attribute>
      <attribute>
         <name>borderColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Defines the color of the border.</description>
      </attribute>
   </tag>
   <!-- Converter for Boolean values -->
   <tag>
      <name>convertBoolean</name>
      <tag-class>org.apache.myfaces.custom.convertboolean.ConvertBooleanTag</tag-class>
      <display-name>Boolean Converter</display-name>
      <description>Converts a boolean to custom format (yes/no), (1/0), etc.</description>
      <attribute>
         <name>trueValue</name>
         <required>false</required>
         <description>Value representing a boolean true, e.g. TRUE, yes, 1, etc.</description>
      </attribute>
      <attribute>
         <name>falseValue</name>
         <required>false</required>
         <description>Value representing a boolean false, e.g. FALSE, no, 0, etc.</description>
      </attribute>
   </tag>
   <tag>
      <name>convertStringUtils</name>
      <tag-class>org.apache.myfaces.custom.convertStringUtils.StringUtilsConverterTag</tag-class>
      <display-name>StringUtils Converter</display-name>
      <description>Converts the format of a string</description>
      <attribute>
         <name>appendEllipsesDuringInput</name>
         <required>false</required>
         <description>Boolean value determining if data should be truncated with ellipses during input conversion. Default = false</description>
      </attribute>
      <attribute>
         <name>appendEllipsesDuringOutput</name>
         <required>false</required>
         <description>Boolean value determining if data should be truncated with ellipses during output conversion. Default = false</description>
      </attribute>
      <attribute>
         <name>format</name>
         <required>false</required>
         <description>Specifies the output case of the string. One of uppercase | lowercase | capitalize</description>
      </attribute>
      <attribute>
         <name>maxLength</name>
         <required>false</required>
         <description>Integer value for the maximum length of the rendered string.  Strings longer than maxValue will be truncated at (maxValue - 3) and an ellipsis '...' will be appended.</description>
      </attribute>
      <attribute>
         <name>trim</name>
         <required>false</required>
         <description>Boolean value determining is the string should be trimmed before any other formatting takes place. Default = false</description>
      </attribute>
   </tag>
   <tag>
      <name>convertDateTime</name>
      <tag-class>org.apache.myfaces.custom.convertDateTime.ConvertDateTimeTag</tag-class>
      <display-name>DateTime Converter</display-name>
      <description>Convert date time using normal system timezone like it should</description>
      <attribute>
         <name>dateStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default|short|medium|long|full</description>
      </attribute>
      <attribute>
         <name>locale</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>locale</description>
      </attribute>
      <attribute>
         <name>pattern</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Custom formatting pattern</description>
      </attribute>
      <attribute>
         <name>timeStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default|short|medium|long|full</description>
      </attribute>
      <attribute>
         <name>timeZone</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>timeZone</description>
      </attribute>
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>date|time|both</description>
      </attribute>
   </tag>
   <!-- fieldset -->
   <tag>
      <name>fieldset</name>
      <tag-class>org.apache.myfaces.custom.fieldset.FieldsetTag</tag-class>
      <body-content>JSP</body-content>
      <description>Renders an HTML Fieldset</description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The style to use for this div.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The class to use for this div.</description>
      </attribute>
      <attribute>
         <name>legend</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The fieldset's legend.</description>
      </attribute>
   </tag>
   <!-- imageLoop-->
   <tag>
      <name>imageLoop</name>
      <tag-class>org.apache.myfaces.custom.imageloop.HtmlImageLoopTag</tag-class>
      <body-content>JSP</body-content>
      <description>
            Image loop/slide show component. Provides Javascript methods to control
            image loop behaviour.
            Methods:
              getImageLoop(id) - get image loop object with id,
              play() - play loop,
              stop() - stop loop,
              accelerate() - accelerate loop until minDelay reached,
              decelerate() - decelerate loop until maxDelay reached,
              setImageIndex(index) - show image with index,
              reset() - reset settings to origin values,
              getImageCount() - get number of images loaded
        </description>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>delay</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The delay between transitions</description>
      </attribute>
      <attribute>
         <name>minDelay</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The minimum delay allowed when decreasing delay time</description>
      </attribute>
      <attribute>
         <name>maxDelay</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The maximum delay allowed when increasing delay time</description>
      </attribute>
      <attribute>
         <name>transitionTime</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Transition time in milliseconds. Set to -1 for immediate image switch.</description>
      </attribute>
      <attribute>
         <name>width</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Width</description>
      </attribute>
      <attribute>
         <name>height</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Height</description>
      </attribute>
   </tag>
   <!--  imageLoopItem -->
   <tag>
      <name>imageLoopItem</name>
      <tag-class>org.apache.myfaces.custom.imageloop.ImageLoopItemTag</tag-class>
      <body-content>empty</body-content>
      <description>Image loop item.</description>
      <!-- UIGraphic attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>url</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An alias for the "value" attribute.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The URL of the image.  If the URL starts with a '/', it is relative
        to the context path of the web application.
    </description>
      </attribute>
   </tag>
   <!--  imageLoopItems -->
   <tag>
      <name>imageLoopItems</name>
      <tag-class>org.apache.myfaces.custom.imageloop.ImageLoopItemsTag</tag-class>
      <body-content>empty</body-content>
      <description>Image loop items.</description>
      <!-- ImageLoopItems attributes -->
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An EL expression that specifies the elements of the image loop.
        The expression can refer to one of the following:
        &lt;ol&gt;
            &lt;li&gt;A single GraphicItem&lt;/li&gt;
            &lt;li&gt;An array or Collection of GraphicItem instances&lt;/li&gt;
        &lt;/ol&gt;
        The value properties of each of the ImageLoopItems must be of the same
        basic type as the parent component's value.
        
    </description>
      </attribute>
   </tag>
   <!-- graphicImageDynamic -->
   <tag>
      <name>graphicImageDynamic</name>
      <tag-class>org.apache.myfaces.custom.graphicimagedynamic.GraphicImageDynamicTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard graphicImage.</description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 img attributes that are not part of the JSF 1.1 specification -->
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>border</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the width of the border of this element, in pixels.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>hspace</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: The amount of white space to be inserted to the left and right
        of this element, in undefined units.  Deprecated in HTML 4.01.
    </description>
      </attribute>
      <attribute>
         <name>vspace</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: The amount of white space to be inserted above and below this
        element, in undefined units.  Deprecated in HTML 4.01.
    </description>
      </attribute>
      <!-- The subset of HTML 4.0 img attributes that are supported by the JSF 1.1 specification -->
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>height</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Overrides the natural height of this image, by specifying height in pixels.</description>
      </attribute>
      <attribute>
         <name>ismap</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies server-side image map handling for this image.</description>
      </attribute>
      <attribute>
         <name>longdesc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: A link to a long description of the image.</description>
      </attribute>
      <!-- "name" attribute cannot be set directly by user -->
      <!-- "src" attribute cannot be set directly, use "url" instead! -->
      <attribute>
         <name>usemap</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies an image map to use with this image.</description>
      </attribute>
      <attribute>
         <name>width</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Overrides the natural width of this image, by specifying width in pixels.</description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>imageRendererClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				The class which implements org.apache.myfaces.custom.graphicimagedynamic.ImageRenderer. The image renderer is responsible for loading the image. The class must have a default constructor. Any request scoped attribute or managed bean is not
				available when this image renderer is instantiated and used. The image renderer must render the binary data for the image by using the parameters passed by nested f:param elements and/or using session or application scoped beans.
			</description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				A value binding which will be called to get the instance of an org.apache.myfaces.custom.graphicimagedynamic.ImageRenderer.
			</description>
      </attribute>
   </tag>
   <!-- outputLinkDynamic -->
   <tag>
      <name>outputLinkDynamic</name>
      <tag-class>org.apache.myfaces.custom.outputlinkdynamic.OutputLinkDynamicTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard outputLink but links to a dynamically rendered resource (image, file, ...).</description>
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 anchor (=a) attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>charset</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the character encoding of the linked resource.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: A hint to the user agent about the content type of the linked resource.</description>
      </attribute>
      <attribute>
         <name>target</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Names the frame that should display content generated by invoking this action. </description>
      </attribute>
      <attribute>
         <name>coords</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The coordinates of regions within a client side image map.</description>
      </attribute>
      <!-- "href" is a special LinkRenderer attribute -->
      <attribute>
         <name>hreflang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The language of the linked resource.</description>
      </attribute>
      <!-- "name" cannot be set by user -->
      <attribute>
         <name>rel</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                HTML: The relationship between the current document and
                the linked resource.
            </description>
      </attribute>
      <attribute>
         <name>rev</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                HTML: The type(s) describing the reverse link for the linked
                resource.
            </description>
      </attribute>
      <attribute>
         <name>shape</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                HTML: The shape of a region in a client side image map.
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>resourceRendererClass</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				The class which implements org.apache.myfaces.custom.dynamicResources.ResourceRenderer.
				The resource renderer is responsible for resource the image.
				The class must have a default constructor.
				Any request scoped attribute or managed bean is not	available when this resource renderer
				is instantiated and used.
				The resource renderer must render the binary data for the resource by using the parameters
				passed by nested f:param elements and/or using session or application scoped beans.
			</description>
      </attribute>
   </tag>
   <!-- togglePanel -->
   <tag>
      <name>togglePanel</name>
      <tag-class>org.apache.myfaces.custom.toggle.TogglePanelTag</tag-class>
      <body-content>JSP</body-content>
      <description>
            Extends PanelGroup. Allows user to toggle between 'view' mode and 'edit' mode.
            In the togglePanel, include a toggleLink.
            When the toggleLink is clicked, the rest of the group is shown, and the link is hidden.
        </description>
      <!-- all standard attributes of the panelGroup tag -->
      <!-- UIPanel attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <attribute>
         <name>toggled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				You can set toggled to true to force the toggleGroup to always be in toggle mode.
				Default is false.
			</description>
      </attribute>
   </tag>
   <!-- toggleGroup -->
   <tag>
      <name>toggleGroup</name>
      <tag-class>org.apache.myfaces.custom.toggle.ToggleGroupTag</tag-class>
      <body-content>JSP</body-content>
      <description>
            Extends PanelGroup. Allows user to have several toggleLink in a group.
            When the togglePanel is toggled, the toggleGroup will be hidden.
        </description>
      <!-- all standard attributes of the panelGroup tag -->
      <!-- UIPanel attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
   </tag>
   <!-- toggleLink -->
   <tag>
      <name>toggleLink</name>
      <tag-class>org.apache.myfaces.custom.toggle.ToggleLinkTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard outputLink but links to a dynamically rendered resource (image, file, ...).</description>
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 anchor (=a) attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>charset</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the character encoding of the linked resource.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: A hint to the user agent about the content type of the linked resource.</description>
      </attribute>
      <attribute>
         <name>target</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Names the frame that should display content generated by invoking this action. </description>
      </attribute>
      <attribute>
         <name>coords</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The coordinates of regions within a client side image map.</description>
      </attribute>
      <!-- "href" is a special LinkRenderer attribute -->
      <attribute>
         <name>hreflang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The language of the linked resource.</description>
      </attribute>
      <!-- "name" cannot be set by user -->
      <attribute>
         <name>rel</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                HTML: The relationship between the current document and
                the linked resource.
            </description>
      </attribute>
      <attribute>
         <name>rev</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                HTML: The type(s) describing the reverse link for the linked
                resource.
            </description>
      </attribute>
      <attribute>
         <name>shape</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                HTML: The shape of a region in a client side image map.
            </description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				The class which implements org.apache.myfaces.custom.dynamicResources.ResourceRenderer.
				The resource renderer is responsible for resource the image.
				The class must have a default constructor.
				Any request scoped attribute or managed bean is not	available when this resource renderer
				is instantiated and used.
				The resource renderer must render the binary data for the resource by using the parameters
				passed by nested f:param elements and/or using session or application scoped beans.
			</description>
      </attribute>
   </tag>
   <!--  effect -->
   <tag>
      <name>effect</name>
      <tag-class>org.apache.myfaces.custom.effect.EffectTag</tag-class>
      <body-content>JSP</body-content>
      <description>provides javascript effects which are from the script.aculo.us library and from the fat fade anything technique library</description>
      <attribute>
         <name>id</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>fade</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
         <name>squish</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>puff</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>scale</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>scaleSize</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>duration</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>pulsate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>fadeColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
   </tag>
   <!-- selectManyPicklist -->
   <tag>
      <name>selectManyPicklist</name>
      <tag-class>org.apache.myfaces.custom.picklist.HtmlSelectManyPicklistTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>selecManyPicklist component</display-name>
      <description>A picklist component that allows to select items from one list to another</description>
      <!-- UISelectMany attributes -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 select attributes -->
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>datafld</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>datasrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>dataformatas</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <!-- "multiple" cannot be set manually -->
      <!-- "name" cannot be set manually -->
      <!-- "size" cannot be set directly for it is a MenuRenderer specific attribute -->
      <!-- ListboxRenderer attributes -->
      <attribute>
         <name>size</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>see JSF Spec.</description>
      </attribute>
      <attribute>
         <name>enabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>disabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
   </tag>
   <!-- selectManyCheckboxAjax -->
   <tag>
      <name>selectManyCheckboxAjax</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.HtmlSelectManyCheckboxAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard selectManyCheckbox allowing for dynamic ajax submitting.</description>
      <!-- all standard attributes of the selectManyCheckbox tag -->
      <!-- UISelectMany attributes -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes for type "checkbox" -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>datafld</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>datasrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>dataformatas</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <!-- CheckboxListRenderer attributes -->
      <attribute>
         <name>layout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Controls the layout direction of the child elements.  Values include:  
	lineDirection (vertical) and pageDirection (horzontal).</description>
      </attribute>
      <!--TODO: disabledClass, enabledClass -->
      <attribute>
         <name>enabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class assigned to the label element for enabled choices.</description>
      </attribute>
      <attribute>
         <name>disabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class assigned to the label element for enabled choices.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>onSuccess</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on successful ajax update</description>
      </attribute>
      <attribute>
         <name>onFailure</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on failed ajax update</description>
      </attribute>
      <attribute>
         <name>onStart</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on start of ajax update</description>
      </attribute>
   </tag>
   <tag>
      <name>selectOneRadioAjax</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.HtmlSelectOneRadioAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard selectOneRadio allowing for dynamic ajax submitting.</description>
      <!-- all standard attributes of the selectManyCheckbox tag -->
      <!-- UISelectMany attributes -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes for type "checkbox" -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>datafld</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>datasrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>dataformatas</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <!-- CheckboxListRenderer attributes -->
      <attribute>
         <name>layout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Controls the layout direction of the child elements.  Values include:  
	lineDirection (vertical) and pageDirection (horzontal).</description>
      </attribute>
      <!--TODO: disabledClass, enabledClass -->
      <attribute>
         <name>enabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class assigned to the label element for enabled choices.</description>
      </attribute>
      <attribute>
         <name>disabledClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class assigned to the label element for enabled choices.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>onSuccess</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on successful ajax update</description>
      </attribute>
      <attribute>
         <name>onFailure</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on failed ajax update</description>
      </attribute>
      <attribute>
         <name>onStart</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on start of ajax update</description>
      </attribute>
   </tag>
   <tag>
      <name>inputTextAjax</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.HtmlInputTextAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard inputText allowing for dynamic ajax submitting.</description>
      <!-- all standard attributes of the inputText tag -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>maxlength</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The maximum number of characters allowed to be entered.</description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The initial width of this control, in characters.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>onSuccess</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on successful ajax update</description>
      </attribute>
      <attribute>
         <name>onFailure</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on failed ajax update</description>
      </attribute>
      <attribute>
         <name>onStart</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on start of ajax update</description>
      </attribute>
      <attribute>
         <name>showOkButton</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Whether to show an ok button before sending update.</description>
      </attribute>
      <attribute>
         <name>okText</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Test for button</description>
      </attribute>
      <attribute>
         <name>showCancelButton</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Whether to show cancel button</description>
      </attribute>
      <attribute>
         <name>cancelText</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Text for cancel</description>
      </attribute>
      <attribute>
         <name>errorStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>StyleClass for the input field where the error occures.
                Useful if there is only one messages area for a few inputTextAjax fields
            </description>
      </attribute>
      <attribute>
         <name>errorStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Style for the input field where the error occures.
                Useful if there is only one messages area for a few inputTextAjax fields
            </description>
      </attribute>
   </tag>
   <tag>
      <name>commandButtonAjax</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.HtmlCommandButtonAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard commandButton allowing for dynamic ajax submitting of the form.</description>
      <!-- all standard attributes of the commandButton tag -->
      <!-- UICommand attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>action</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression that identifies an action method to be
        invoked if this component is activated by the user. An action method
        accepts no parameters and has a String return value, called the action
        outcome, that identifies the next view displayed. The phase that this
        event is fired in can be controlled via the immediate attribute.
    </description>
      </attribute>
      <attribute>
         <name>actionListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression that identifies an action listener method
        to be invoked if this component is activated by the user. An action
        listener method accepts a parameter of type javax.faces.event.ActionEvent
        and returns void. The phase that this event is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 button attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: A hint to the user agent about the content type of the linked resource.</description>
      </attribute>
      <!-- 
        <attribute>
            <name>size</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <type>java.lang.String</type>
            <description>The initial width of this control.</description>
        </attribute>
        -->
      <!-- HtmlCommandButton attributes -->
      <attribute>
         <name>image</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The URL of an image that renders in place of the button.</description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>onSuccess</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on successful ajax update</description>
      </attribute>
      <attribute>
         <name>onFailure</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on failed ajax update</description>
      </attribute>
      <attribute>
         <name>onStart</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on start of ajax update</description>
      </attribute>
   </tag>
   <tag>
      <name>listener</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.ListenerTag</tag-class>
      <body-content>JSP</body-content>
      <description>Allows a component to listen for events on another component with AJAX input elements.</description>
      <attribute>
         <name>on</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Id of another component.</description>
      </attribute>
      <attribute>
         <name>eventType</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>NOT IMPLEMENTED - Type of event (ie: onchange, onclick) </description>
      </attribute>
      <attribute>
         <name>action</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>NOT IMPLEMENTED - Action to take (ie: update, submit, call (call a javascript function)) </description>
      </attribute>
   </tag>
   <tag>
      <name>selectBooleanCheckboxAjax</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.HtmlSelectBooleanCheckboxAjaxTag</tag-class>
      <body-content>JSP</body-content>
      <description>Extends standard selectBooleanCheckbox by user role support.</description>
      <!-- UISelectBoolean attributes -->
      <!-- "selected" attribute is covered by HTML "checked" attribute -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes for type "checkbox" -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>datafld</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>datasrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>dataformatas</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Reserved for future use.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>displayValueOnly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If true, renders only the value of the component, but no input widget.
                Default is false.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>displayValueOnlyStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Style class used when displayValueOnly is true.
            </description>
      </attribute>
      <attribute>
         <name>onSuccess</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on successful ajax update</description>
      </attribute>
      <attribute>
         <name>onFailure</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on failed ajax update</description>
      </attribute>
      <attribute>
         <name>onStart</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Javascript method to call on start of ajax update</description>
      </attribute>
      <attribute>
         <name>onImage</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Image to show instead of checkox when boolean value is true</description>
      </attribute>
      <attribute>
         <name>offImage</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Image to show instead of checkox when boolean value is false</description>
      </attribute>
   </tag>
   <!-- message, special for ajax stuff to enable client side message updates, could roll this into tomahawk at some point -->
   <tag>
      <name>message</name>
      <tag-class>org.apache.myfaces.custom.inputAjax.HtmlMessageTag</tag-class>
      <body-content>JSP</body-content>
      <description>MyFaces extension to the standard messages tag: see summaryDetailSeparator attribute</description>
      <!-- all standard attributes of the message tag -->
      <!-- UIMessage attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An EL expression, returning a String, with the unique ID of the component 
        for which messages should be displayed.  This string has the same format
        as that accepted by the UIComponent.findComponent() method.
    </description>
      </attribute>
      <attribute>
         <name>showSummary</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An EL expression, returning a boolean, that controls whether the
        summary text of the associated messages is displayed.  Default: true.
    </description>
      </attribute>
      <attribute>
         <name>showDetail</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An EL expression, returning a boolean, that controls whether the
        detail text of the associated messages is displayed.  Default: false.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HtmlMessage attributes -->
      <attribute>
         <name>infoClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS class to be used for messages with severity "INFO".</description>
      </attribute>
      <attribute>
         <name>infoStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS style to be used for messages with severity "INFO".</description>
      </attribute>
      <attribute>
         <name>warnClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS class to be used for messages with severity "WARN".</description>
      </attribute>
      <attribute>
         <name>warnStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS style to be used for messages with severity "WARN".</description>
      </attribute>
      <attribute>
         <name>errorClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS class to be used for messages with severity "ERROR".</description>
      </attribute>
      <attribute>
         <name>errorStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS style to be used for messages with severity "ERROR".</description>
      </attribute>
      <attribute>
         <name>fatalClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS class to be used for messages with severity "FATAL".</description>
      </attribute>
      <attribute>
         <name>fatalStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS style to be used for messages with severity "FATAL".</description>
      </attribute>
      <attribute>
         <name>tooltip</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If true, the message summary will be rendered as a tooltip (i.e. HTML title attribute).
            </description>
      </attribute>
      <!-- MyFaces extensions -->
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!--
        This attribute indicates that the component should be forced to use the specified id instead of
        using the one that faces generates.  Components contained within a "list" will include a '[n]'
        suffix where 'n' is the row index (unless the forceIdIndex attribute is set to false).
        -->
      <attribute>
         <name>forceId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If true, this component will force the use of the specified id when rendering.</description>
      </attribute>
      <!--
        If the component is contained within an "list" (such as dataTable), this attribute indicates whether or not a
        '[n]' suffix should be added where 'n' is the row index.  Default is true.  The attribute is ignored if forceId
        is false (or not specified)
        -->
      <attribute>
         <name>forceIdIndex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
                If false, this component will not append a '[n]' suffix (where 'n' is the row index) to components
                that are contained within a "list."  This value will be true by default and the value will be ignored if
                the value of forceId is false (or not specified.)
            </description>
      </attribute>
      <attribute>
         <name>summaryFormat</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
				If present, instead of rendering the message summary, a MessageFormat with this attribute as pattern is created. The format method of this MessageFormat is called with the message summary as the first argument and the label of the
				associated component (if any) as the second argument. Example: "{0}:"
			</description>
      </attribute>
      <attribute>
         <name>detailFormat</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
				If present, instead of rendering the message detail, a MessageFormat with this attribute as pattern is created. The format method of this MessageFormat is called with the message detail as the first argument and the label of the associated
				component (if any) as the second argument. Example: "The input in field {1} is wrong: {0}"
			</description>
      </attribute>
      <attribute>
         <name>replaceIdWithLabel</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>If present, all occurrences of the id of the component for which the message is rendered will be replaced by the label. Standard is true for the extended message renderer.</description>
      </attribute>
   </tag>
   <tag>
      <name>subForm</name>
      <tag-class>org.apache.myfaces.custom.subform.SubFormTag</tag-class>
      <body-content>JSP</body-content>
      <description>
			A subform to an existing form. Inputs in this form will only be validated and updated, if a t:commandButton or t:commandLink has been clicked with an actionFor attribute which references the client-id of this subform.

			Optionally, the validation will trigger if a commandButton or commandLink embedded in this subform has been clicked, except if this command is a t:commandButton or t:commandLink with an actionFor attribute which doesn't reference the client-id
			of this subform.
		</description>
      <!-- UIForm attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>preserveSubmittedValues</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
				true|false - set to false if you submit other subforms and would like to have your subform
				reflecting any model update. Default: true
			</description>
      </attribute>
   </tag>
   <!-- selectOneRow -->
   <tag>
      <name>selectOneRow</name>
      <tag-class>org.apache.myfaces.custom.selectOneRow.SelectOneRowTag</tag-class>
      <body-content>JSP</body-content>
      <description>Enhancement for a data-table to select one Row with a radio button. The row-index is stored in the vealu-binding</description>
      <attribute>
         <name>groupName</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The Name of the radio-button-group to use</description>
      </attribute>
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is clicked on.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
   </tag>
   <!-- stateChangedNotifier -->
   <tag>
      <name>stateChangedNotifier</name>
      <tag-class>org.apache.myfaces.custom.statechangednotifier.StateChangedNotifierTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>stateChangedNotifier component</display-name>
      <description>A component that listens to changes in the components</description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>confirmationMessage</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       Confirmation message to show if something in the form has changed
    </description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       If disabled, the confirmation window will not be shown
     </description>
      </attribute>
      <attribute>
         <name>excludedIds</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       Comma-separated list of cliend id of the commands which will be excluded from the confirmation message
     </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
		value if set to true triggers the state change notification
     </description>
      </attribute>
   </tag>
   <tag>
      <name>outputText</name>
      <tag-class>org.apache.myfaces.custom.suggestajax.tablesuggestajax.HtmlOutputTextTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>outputText component</display-name>
      <description>Extending the outputText component in order to introduce the for attribute.</description>
      <!-- all standard attributes of the outputText tag -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HtmlOutputText attributes -->
      <attribute>
         <name>escape</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                Indicates whether rendered markup should be escaped.
                Default: true
            </description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Specify the id of the dom element where the label should be put in</description>
      </attribute>
      <attribute>
         <name>forValue</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Specify the id of the dom element where the value should be put in.
                         This value is also included in the suggested table, but only in a hidden
                         span element following the span for the label in one row.
            </description>
      </attribute>
      <attribute>
         <name>label</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>To provide a second value in form of a label. Usage like SelectItem.
                         Label is brought to client in a hidden span element near the value.
            </description>
      </attribute>
   </tag>
   <tag>
      <name>ifMessage</name>
      <tag-class>org.apache.myfaces.custom.ifmessage.IfMessageTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>ifMessage component</display-name>
      <description>Provide a component that will optionally render its children if the specified
			component(s) specified has a message.</description>
      <attribute>
         <name>for</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description/>
      </attribute>
   </tag>
   <!--  fishEye -->
   <tag>
      <name>fishEyeNavigationMenu</name>
      <tag-class>org.apache.myfaces.custom.fisheye.HtmlFishEyeNavigationMenuTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>fishEye List component</display-name>
      <description>Provide a FishEye toolbar component from the DOJO toolkit</description>
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>attachEdge</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>itemHeight</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>effectUnits</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
      </attribute>
      <attribute>
         <name>itemMaxHeight</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>itemMaxWidth</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>itemPadding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>itemWidth</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>labelEdge</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>orientation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>conservativeTrigger</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>visibleWindow</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>var</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
   </tag>
   <tag>
      <name>fishEyeCommandLink</name>
      <tag-class>org.apache.myfaces.custom.fisheye.FishEyeCommandLinkTag</tag-class>
      <body-content>JSP</body-content>
      <display-name>fishEye commandLink component</display-name>
      <description>CommandLink component that can be used in nodeStamp facet</description>
      <!-- UICommand attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>action</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression that identifies an action method to be
        invoked if this component is activated by the user. An action method
        accepts no parameters and has a String return value, called the action
        outcome, that identifies the next view displayed. The phase that this
        event is fired in can be controlled via the immediate attribute.
    </description>
      </attribute>
      <attribute>
         <name>actionListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression that identifies an action listener method
        to be invoked if this component is activated by the user. An action
        listener method accepts a parameter of type javax.faces.event.ActionEvent
        and returns void. The phase that this event is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which action events
        should fire. During normal event processing, action methods and
        action listener methods are fired during the "invoke application"
        phase of request processing. If this attribute is set to "true",
        these methods are fired instead at the end of the "apply request
        values" phase.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>caption</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
      </attribute>
      <attribute>
         <name>iconSrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>target</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
      </attribute>
   </tag>
   <!-- timed notifier -->
   <tag>
      <name>timedNotifier</name>
      <tag-class>org.apache.myfaces.custom.timednotifier.TimedNotifierTag</tag-class>
      <body-content>JSP</body-content>
      <description>Displays a timed notifier tag</description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>confirmationMessage</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>confirmation message to be displayed</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>showDelay</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Delay from show to hide</description>
      </attribute>
      <attribute>
         <name>hideDelay</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Delay to being visible</description>
      </attribute>
   </tag>
   <!-- conversation -->
   <tag>
      <name>startConversation</name>
      <tag-class>org.apache.myfaces.custom.conversation.StartConversationTag</tag-class>
      <body-content>JSP</body-content>
      <description>Starts a new conversation</description>
      <attribute>
         <name>persistence</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       true|false - if this conversation requires a persistence manager. Default: false
    </description>
      </attribute>
      <attribute>
         <name>name</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       the name of the conversation
    </description>
      </attribute>
   </tag>
   <tag>
      <name>endConversation</name>
      <tag-class>org.apache.myfaces.custom.conversation.EndConversationTag</tag-class>
      <body-content>JSP</body-content>
      <description>Ends a conversation</description>
      <attribute>
         <name>onOutcome</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       end the conversation only if the action outcome matches the given onOutcome. This can be a comma separated list.
    </description>
      </attribute>
      <attribute>
         <name>errorOutcome</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        on exception use the given outcome for further navigation
    </description>
      </attribute>
      <attribute>
         <name>restart</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
		true|false|valueBinding - true if the conversation should be restarted immediately
	</description>
      </attribute>
      <attribute>
         <name>restartAction</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
		the action which should be called in case of a restart
	</description>
      </attribute>
      <attribute>
         <name>name</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       the name of the conversation
    </description>
      </attribute>
   </tag>
   <tag>
      <name>separateConversationContext</name>
      <tag-class>org.apache.myfaces.custom.conversation.SeparateConversationContextTag</tag-class>
      <body-content>JSP</body-content>
      <description>Separates the current context from the children. e.g. commandLinks will start a new conversation context</description>
   </tag>
   <tag>
      <name>conversation</name>
      <tag-class>org.apache.myfaces.custom.conversation.ConversationTag</tag-class>
      <body-content>JSP</body-content>
      <description>puts a bean into the conversation context</description>
      <attribute>
         <name>name</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       		the name of the conversation. Notice: required if tag not as child of startConversation tag.
    		</description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The bean reference.</description>
      </attribute>
   </tag>
   <tag>
      <name>ensureConversation</name>
      <tag-class>org.apache.myfaces.custom.conversation.EnsureConversationTag</tag-class>
      <body-content>JSP</body-content>
      <description>Ensures a named conversation is running</description>
      <attribute>
         <name>redirectTo</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       redirect to the given view if the conversation is not running
    </description>
      </attribute>
      <attribute>
         <name>action</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
		the action which should be called in case of a not running conversation
	</description>
      </attribute>
      <attribute>
         <name>preCheck</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
		Delegate the check to the action method at all. The user has to check if a conversation
		is running. A action method is mandatory.
	</description>
      </attribute>
      <attribute>
         <name>name</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
       the name of the conversation
    </description>
      </attribute>
   </tag>
   <tag>
      <name>convertNumber</name>
      <tag-class>org.apache.myfaces.custom.convertNumber.TypedNumberConverterTag</tag-class>
      <body-content>JSP</body-content>
      <description>
            This tag creates a number formatting converter and associates it
            with the nearest parent UIComponent.

			It uses either the manually set &lt;code&gt;destType&lt;/code&gt; or the value binding
			to determine the correct destination type to convert the number to.

            Unless otherwise specified, all attributes accept static values or EL expressions.
		</description>
      <attribute>
         <name>currencyCode</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>ISO 4217 currency code</description>
      </attribute>
      <attribute>
         <name>currencySymbol</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The currency symbol used to format a currency value.  Defaults
        to the currency symbol for locale.
    </description>
      </attribute>
      <attribute>
         <name>groupingUsed</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Specifies whether output will contain grouping separators.  Default: true.</description>
      </attribute>
      <attribute>
         <name>integerOnly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Specifies whether only the integer part of the input will be parsed.  Default: false.</description>
      </attribute>
      <attribute>
         <name>locale</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The name of the locale to be used, instead of the default as
        specified in the faces configuration file.
    </description>
      </attribute>
      <attribute>
         <name>maxFractionDigits</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The maximum number of digits in the fractional portion of the number.</description>
      </attribute>
      <attribute>
         <name>maxIntegerDigits</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The maximum number of digits in the integer portion of the number.</description>
      </attribute>
      <attribute>
         <name>minFractionDigits</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The minimum number of digits in the fractional portion of the number.</description>
      </attribute>
      <attribute>
         <name>minIntegerDigits</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The minimum number of digits in the integer portion of the number.</description>
      </attribute>
      <attribute>
         <name>pattern</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>A custom Date formatting pattern, in the format used by java.text.SimpleDateFormat.</description>
      </attribute>
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The type of formatting/parsing to be performed.  Values include:
        number, currency, and percentage.  Default: number.
    </description>
      </attribute>
      <attribute>
         <name>destType</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The java class name the value should be converted to. Default: automatically determined through valueBinding</description>
      </attribute>
   </tag>
   <!-- Partial Page Rendering -->
   <tag>
      <name>pprPanelGroup</name>
      <tag-class>org.apache.myfaces.custom.ppr.PPRPanelGroupTag</tag-class>
      <body-content>JSP</body-content>
      <description>PanelGroup which supports a partialTriggers Attribute similar to the one in Trinidad</description>
      <!-- all standard attributes of the panelGroup tag -->
      <!-- UIPanel attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <attribute>
         <name>partialTriggers</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Comma or Space seperated List of ids from ui_command-items which trigger a partial update of this PanelGroup</description>
      </attribute>
      <attribute>
         <name>partialTriggerPattern</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Regular Expression If the client Id of a submitting Component matches this Pattern the corresponding pprPanelGroup is updated via AJAX</description>
      </attribute>
      <attribute>
         <name>inlineLoadingMessage</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>If this attribute is set the content of the PPRPanelGroup will be replaced by the provided
		                 Loading-Message during partial update</description>
      </attribute>
      <attribute>
         <name>periodicalUpdate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Does a periodical refresh of the partial page inside the ppr group. In milliseconds.
                         No partialTriggers are needed.
            </description>
      </attribute>
      <attribute>
         <name>periodicalTriggers</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>If a periodicalUpdate is set this trigger starts the periodical requests.
                         No partialTriggers are needed.
            </description>
      </attribute>
      <attribute>
         <name>excludeFromStoppingPeriodicalUpdate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Normally when a link is clicked during periodical update, the update is stopped in order to prevent the server from getting
						 unexpected requests. For any POST-request this is the wanted behaviour because the screen is completely refreshed and periodical
					     updating starts again after the response.
						 However, this behaviour may be unwanted e.g. in case of opening a new window with a link where the main screen should stay refreshed.
						 This attribute takes a regular expression of link-client-ids for which the periodical update should not be stopped.

						 If this value is given, there will be a default timeout of 2000 milliseconds before any periodical
						 update will start again. This is done as mentioned before in order to prevent the server from getting unexpected requests.   
						 This timeout can be influenced via the waitBeforePeriodicalUpdate attribute.
			</description>
      </attribute>
      <attribute>
         <name>waitBeforePeriodicalUpdate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>This attribute only works in combination with the excludeFromStoppingPeriodicalUpdate attribute. The value
						 in milliseconds tells the periodical update mechanism to stop for the given amount of time after clicking a link, specified by
						 the excludeFromStoppingPeriodicalUpdate attribute.

						 The default value is 2000 milliseconds.
			</description>
      </attribute>
      <attribute>
         <name>showDebugMessages</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>If false, alert messages which can be fired after a ppr response are not displayed in the browser.
                         May switched to true in test environments. Default: false
            </description>
      </attribute>
      <attribute>
         <name>stateUpdate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>If set to false, there will be no stateUpdate on server side due to the partialPage refresh.
                         Default: true
            </description>
      </attribute>
      <attribute>
         <name>appendMessages</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>comma separated List of client Ids that specify the messages components
                in the page to which messages are appended by this PPRPanelGroup
            </description>
      </attribute>
      <attribute>
         <name>replaceMessages</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>comma separated List of client Ids that specify the messages components
                in the page which messages are replaced by this PPRPanelGroup
            </description>
      </attribute>
      <attribute>
         <name>componentUpdateFunction</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>client javascript function which will do the actual dom update. function signature:
                function(formNodeElement, updateTargetElement, pprResponseElement)
            </description>
      </attribute>
   </tag>
   <tag>
      <name>pprSubmit</name>
      <tag-class>org.apache.myfaces.custom.ppr.PPRSubmitTag</tag-class>
      <body-content>JSP</body-content>
      <description>PPRSubmitTag can be attached to command components, enabling PPR-request inside UIData components</description>
      <attribute>
         <name>processComponentIds</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                comma separated List of component ids to process. As usual the whole form will be transmitted and
                rerendered, but only for the components configured validation and update-model will happen.
            </description>
      </attribute>
   </tag>
   <tag>
      <name>layoutingContentPane</name>
      <tag-class>org.apache.myfaces.custom.dojolayouts.DojoContentPaneTag</tag-class>
      <body-content>JSP</body-content>
      <description>Base content pane for the dojo layouts</description>
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>widgetId</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Optional enforced dojo widgetId</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
		optional widget var name, if this is not used only an
		autogenerated value is set
	</description>
      </attribute>
      <attribute>
         <name>sizeShare</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Size share value describing the place the content pane wants from its parent</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <attribute>
         <name>href</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Remote href for iframe simulation</description>
      </attribute>
      <attribute>
         <name>adjustPaths</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Path adjustment as defined by dojo</description>
      </attribute>
      <attribute>
         <name>extractContent</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Defined by dojo, see the examples</description>
      </attribute>
      <attribute>
         <name>parseContent</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Defined by dojo see the examples</description>
      </attribute>
      <attribute>
         <name>preload</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Content Preloading</description>
      </attribute>
      <attribute>
         <name>handler</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				Javascript function which should generate the content
			</description>
      </attribute>
      <attribute>
         <name>scriptScope</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Scopecontainer for downloaded Scripts</description>
      </attribute>
      <attribute>
         <name>refreshOnShow</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Description for the attribute</description>
      </attribute>
      <attribute>
         <name>layoutAlign</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				Layoutalignment usable in conjunction with a layout
				container
			</description>
      </attribute>
      <attribute>
         <name>executeScripts</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
				If true scripts will be evaled after rendering
			</description>
      </attribute>
   </tag>
   <tag>
      <name>layoutingTitlePane</name>
      <tag-class>org.apache.myfaces.custom.dojolayouts.TitlePaneTag</tag-class>
      <body-content>JSP</body-content>
      <description>Title Pane layouting element</description>
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>widgetId</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Optional enforced dojo widgetId</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
		optional widget var name, if this is not used only an
		autogenerated value is set
	</description>
      </attribute>
      <attribute>
         <name>containerNodeClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>the css node class for the container part of the element</description>
      </attribute>
      <attribute>
         <name>labelNodeClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>the css node class for the label part of the pane</description>
      </attribute>
      <attribute>
         <name>label</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
				Label for the titled paned element
			</description>
      </attribute>
   </tag>
   <tag>
      <name>layoutingSplitPane</name>
      <tag-class>org.apache.myfaces.custom.dojolayouts.DojoSplitPaneTag</tag-class>
      <body-content>JSP</body-content>
      <description>PanelGroup which supports a partialTriggers Attribute similar to the one in Trinidad</description>
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>widgetId</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Optional enforced dojo widgetId</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
		optional widget var name, if this is not used only an
		autogenerated value is set
	</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <attribute>
         <name>sizeShare</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Size share value describing the place the content pane wants from its parent</description>
      </attribute>
      <attribute>
         <name>activeSizing</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Size share value describing the place the content pane wants from its parent</description>
      </attribute>
      <attribute>
         <name>sizerWidth</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>width of the sizer bar</description>
      </attribute>
      <attribute>
         <name>orientation</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>horizontal or vertical</description>
      </attribute>
      <attribute>
         <name>persist</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>If true, cookie persisting of the split pane is enabled</description>
      </attribute>
      <attribute>
         <name>startPoint</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Starting Point of the split pane as defined by dojo</description>
      </attribute>
      <attribute>
         <name>lastPoint</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Last point of the split pane</description>
      </attribute>
   </tag>
   <tag>
      <name>modalDialog</name>
      <tag-class>org.apache.myfaces.custom.dialog.ModalDialogTag</tag-class>
      <body-content>JSP</body-content>
      <description>Modal Dojo Dialog (is not working with overridden 'onload')</description>
      <!-- UIPanel attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>widgetId</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Optional enforced dojo widgetId</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
		optional widget var name, if this is not used only an
		autogenerated value is set
	</description>
      </attribute>
      <!-- style attributes -->
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- custom attributes -->
      <attribute>
         <name>dialogVar</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The name of the variable to control the dialog (dojo widget) with javascript.</description>
      </attribute>
      <attribute>
         <name>dialogId</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The id to control the dialog (dojo widget) with javascript.</description>
      </attribute>
      <attribute>
         <name>dialogAttr</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>A space separated list with attribute='value' pairs, which control the behaviour of the dojo dialog.</description>
      </attribute>
      <attribute>
         <name>hiderIds</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>A comma separated list with ids of input-elements, which can tell (by javascript-code) the dialog to hide.</description>
      </attribute>
      <attribute>
         <name>viewId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The URL of the view to show within the content area of the dialog</description>
      </attribute>
      <attribute>
         <name>dialogTitle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The title text to show in the title area</description>
      </attribute>
      <attribute>
         <name>closeButton</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>true|false - Set to true if a close button should be rendere within the title area (requires a dialogTitle)</description>
      </attribute>
   </tag>
   <!-- Validator for csv validation items -->
   <tag>
      <name>validateCSV</name>
      <tag-class>org.apache.myfaces.custom.csvvalidator.ValidateCSVTag</tag-class>
      <body-content>JSP</body-content>
      <description>Validation by validating comma separated values individually.</description>
      <!--
        This attribute indicates an alternate validation error message format string to display.
        -->
      <attribute>
         <name>message</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                alternate validation error message format string
            </description>
      </attribute>
      <attribute>
         <name>subvalidatorId</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
      <attribute>
         <name>separator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
      </attribute>
   </tag>
   <tag>
      <name>submitOnEvent</name>
      <tag-class>org.apache.myfaces.custom.submitOnEvent.SubmitOnEventTag</tag-class>
      <body-content>JSP</body-content>
      <description>Attach an event handler to an input element or use a global event handler
            to submit a form by "clicking" on a link or button
        </description>
      <attribute>
         <name>for</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The component (commandLink or commandButton) to "click" on</description>
      </attribute>
      <attribute>
         <name>event</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The event: keypress|keydown|keyup|change|focus|blur|click|mousedown|mouseup|mousemove|mouseover|mouseout|select (Default: keypress)</description>
      </attribute>
      <attribute>
         <name>callback</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>User defined javascript callback function.
        This function will be called to decide if the event should trigger the submit.
        (Default: fire on "Enter") </description>
      </attribute>
   </tag>
   <tag>
      <name>exporter</name>
      <tag-class>org.apache.myfaces.custom.exporter.ExporterTag</tag-class>
      <body-content>JSP</body-content>
      <description>Export datatable contents to an excel file or a pdf file.
        </description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>for</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Id of the datatable component whose values to be exported</description>
      </attribute>
      <attribute>
         <name>filename</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Default name of the generated excel or pdf file, if not specified value of the "for" attribute will be used</description>
      </attribute>
      <attribute>
         <name>fileType</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>"PDF" or "XLS"</description>
      </attribute>
   </tag>
   <tag>
      <name>floatingPane</name>
      <tag-class>org.apache.myfaces.custom.dojolayouts.FloatingPaneTag</tag-class>
      <body-content>JSP</body-content>
      <description>PanelGroup which supports a partialTriggers Attribute similar to the one in Trinidad</description>
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>widgetId</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Optional enforced dojo widgetId</description>
      </attribute>
      <attribute>
         <name>widgetVar</name>
         <required>falsetrue</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
		optional widget var name, if this is not used only an
		autogenerated value is set
	</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>the floating pane Title</description>
      </attribute>
      <attribute>
         <name>iconSrc</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The pane icon source</description>
      </attribute>
      <attribute>
         <name>hasShadow</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Shadow drawn or not</description>
      </attribute>
      <attribute>
         <name>constrainToContainer</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>limit to parent container</description>
      </attribute>
      <attribute>
         <name>taskBarId</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The taskbar id</description>
      </attribute>
      <attribute>
         <name>resizable</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Window resizable</description>
      </attribute>
      <attribute>
         <name>titleBarDisplay</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Displays the title bar of the Window</description>
      </attribute>
      <attribute>
         <name>windowState</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Display state of the window</description>
      </attribute>
      <attribute>
         <name>displayCloseAction</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>if true a close button is displayed</description>
      </attribute>
      <attribute>
         <name>displayMinimizeAction</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>if true a minimize button is displayed</description>
      </attribute>
      <attribute>
         <name>modal</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Description for the attribute</description>
      </attribute>
   </tag>
   <!-- sortableTable -->
   <tag>
      <name>filterTable</name>
      <tag-class>org.apache.myfaces.custom.table.FilterTableTag</tag-class>
      <body-content>JSP</body-content>
      <description/>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>An EL expression that specifies the data model that backs this table.  The value can be of any type.

    A value of type DataModel is used directly.  Array-like parameters of type java.util.List, array of Object,
    java.sql.ResultSet, or javax.servlet.jsp.jstl.sql.Result are wrapped in a DataModel.

    Other values are wrapped in a DataModel as a single row.</description>
      </attribute>
      <attribute>
         <name>var</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>Defines the name of the request-scope variable that will hold the current row during iteration.  This value must be a static value.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>CSS style class attribute</description>
      </attribute>
      <attribute>
         <name>headClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=fixedHeader see http://dojotoolkit.org filterTable</description>
      </attribute>
      <attribute>
         <name>tbodyClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=scrollContent see http://dojotoolkit.org filterTable</description>
      </attribute>
      <attribute>
         <name>multiple</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=true see http://dojotoolkit.org filterTable</description>
      </attribute>
      <attribute>
         <name>alternateRows</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=true see http://dojotoolkit.org filterTable</description>
      </attribute>
      <attribute>
         <name>maxSortable</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=1 see http://dojotoolkit.org filterTable</description>
      </attribute>
      <attribute>
         <name>cellpadding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=0</description>
      </attribute>
      <attribute>
         <name>cellspacing</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=0</description>
      </attribute>
      <attribute>
         <name>border</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=0</description>
      </attribute>
   </tag>
   <tag>
      <name>sortableColumn</name>
      <tag-class>org.apache.myfaces.custom.table.SortableColumnTag</tag-class>
      <body-content>JSP</body-content>
      <description/>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>field</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>see http://dojotoolkit.org org filterTable</description>
      </attribute>
      <attribute>
         <name>dataType</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=String {Number,Date,html,String} see http://dojotoolkit.org org filterTable</description>
      </attribute>
      <attribute>
         <name>sort</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>{asc, desc} see http://dojotoolkit.org org filterTable</description>
      </attribute>
      <attribute>
         <name>format</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>{asc, desc} see http://dojotoolkit.org org filterTable</description>
      </attribute>
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>{asc, desc} see http://dojotoolkit.org org filterTable</description>
      </attribute>
      <attribute>
         <name>valign</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>{asc, desc} see http://dojotoolkit.org org filterTable</description>
      </attribute>
      <attribute>
         <name>text</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>column header text</description>
      </attribute>
      <attribute>
         <name>escape</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>default=true escape text</description>
      </attribute>
   </tag>
   <!-- ValidationScript -->
   <tag>
      <name>validationScript</name>
      <tag-class>org.apache.myfaces.custom.clientvalidation.validationscript.ValidationScriptTag</tag-class>
      <body-content>JSP</body-content>
      <description/>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
   </tag>
   <tag>
      <name>limitRendered</name>
      <tag-class>org.apache.myfaces.custom.limitrendered.UILimitRenderedTag</tag-class>
      <body-content>JSP</body-content>
      <description>Tag that allows for selective rendering based on a count or by child index</description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- UILimitRendered attributes -->
      <attribute>
         <name>type</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The filter type: count|index.
        count: the value should evaluate to a Number or a value that can be parsed into an integer. 
        index: A collection, array or comma-separated list of numbers.
        (Default: "count")
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
      The value valid for the type. If this evaluates to null, all children will be rendered.
      If the type is count, this value must evaluate to a java Number instance or a value which
      the toString() method can be used with Integer.parseInt(String). The first number of children
      that are rendered (isRendered() returns true) up to the given value will be rendered.
      
      If the type is index, the value must be a Collection, int[], Object[] or a comma-separated 
      list of numbers. Each item in the list must be a valid number. If negative, it is taken from
      then end. If the child at the given index is not rendered, then that component is skipped
      (so the indexes are absolute).
      
      See the documentation on the myfaces website for more information.
    </description>
      </attribute>
   </tag>
   <tag>
      <name>roundedDiv</name>
      <tag-class>org.apache.myfaces.custom.roundeddiv.HtmlRoundedDivTag</tag-class>
      <body-content>JSP</body-content>
      <description>
          Component that allows for a rounded border effect on DIV tags that is supported
          in CSS2 compatible browsers and IE6.
        </description>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <!-- MyFaces extension: user role attributes -->
      <attribute>
         <name>enabledOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, no hyperlink is rendered but all nested
                tags (=body) are rendered.
            </description>
      </attribute>
      <attribute>
         <name>visibleOnUserRole</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
                If user is in given role, this component will be rendered
                normally. If not, nothing is rendered and the body of this tag
                will be skipped.
            </description>
      </attribute>
      <!-- HtmlRoundedDiv attributes -->
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The style to use for this div.
    </description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The class to use for this div.
    </description>
      </attribute>
      <attribute>
         <name>backgroundColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        Background color to give the corners. Leave blank (null)
        to have a transparent background. If the user is using IE6, this has to be set,
        or the corners will not look good due to IE6's lack of PNG support. 
    </description>
      </attribute>
      <attribute>
         <name>borderColor</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The color of the border. If specified, this will cause the DIV
        to be 2D, if it isn't the border with have a 3D effect with
        lighting effects to produce the border color.
    </description>
      </attribute>
      <attribute>
         <name>borderWidth</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The width of the border in pixels. (Default: 8)
    </description>
      </attribute>
      <attribute>
         <name>color</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The foreground color of the DIV
    </description>
      </attribute>
      <attribute>
         <name>corners</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        This allows you to specify a comma-separated list of corners to
        include. If not given, all four corners will be rendered. The corners
        include the sides they touch. So for example, if used as a tab for a 
        tabbed pane, you could specify "topleft,topright" to have everything
        but the bottom corners and side have the border. Valid values are:
        topleft, topright, bottomright, bottomleft
    </description>
      </attribute>
      <attribute>
         <name>radius</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The radius of the corners in pixels. (Default: 8)
    </description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        If given, a static size image will be produced. This could be
        useful for older browsers. If not given, the DIV that will be created
        will stretch to its contents using CSS2 (and CSS expressions in IE6).
        Value must contain two numbers, with width first. Example: 640x480
    </description>
      </attribute>
      <attribute>
         <name>inverse</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        Flips the lightening/darkening effect for 3D borders. (Default: false)
    </description>
      </attribute>
      <attribute>
         <name>layout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        Either "table" or "div". Specifies how the output should be rendered.
        Size must be null if using "table" (if it is not, a div will be rendered).
        (Default: div)
    </description>
      </attribute>
      <attribute>
         <name>contentStyle</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The CSS style to give to the content DIV or TD (based on layout)
    </description>
      </attribute>
      <attribute>
         <name>contentStyleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>
        The CSS style class to give to the content DIV or TD (based on layout)
    </description>
      </attribute>
   </tag>
   <tag>
      <name>passwordStrength</name>
      <tag-class>org.apache.myfaces.custom.passwordStrength.PasswordStrengthTag</tag-class>
      <!-- all standard attributes of the inputText tag -->
      <!-- UIInput attributes -->
      <!-- UIOutput attributes -->
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>value</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>The initial value of this component.</description>
      </attribute>
      <attribute>
         <name>converter</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        An expression that specifies the Converter for this component.  
        If the value binding expression is a String, the String is used
        as an ID to look up a Converter. If the value binding expression
        is a Converter, uses that instance as the converter.
            
        The value can either be a static value (ID case only) or an EL expression.
    </description>
      </attribute>
      <attribute>
         <name>immediate</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that identifies the phase during which value change
        events should fire. During normal event processing, value change
        events are fired during the "invoke application" phase of request
        processing. If this attribute is set to "true", these methods are
        fired instead at the end of the "apply request values" phase.
    </description>
      </attribute>
      <attribute>
         <name>required</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether an input value is required.
        If this value is true, and no input value is provided, the error
        message javax.faces.component.UIInput.REQUIRED is posted.
    </description>
      </attribute>
      <attribute>
         <name>validator</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting FacesContext, UIComponent,
        and Object parameters, and returning void, that validates the
        component's local value.
    </description>
      </attribute>
      <attribute>
         <name>valueChangeListener</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A method binding EL expression, accepting a ValueChangeEvent parameter
        and returning void. The specified method is invoked if this component
        is modified. The phase that this handler is fired in can be controlled
        via the immediate attribute.
    </description>
      </attribute>
      <!-- HTML 4.0 universal attributes -->
      <attribute>
         <name>dir</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The direction of text display, either 'ltr' (left-to-right) or 'rtl' (right-to-left).</description>
      </attribute>
      <attribute>
         <name>lang</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: The base language of this document.</description>
      </attribute>
      <attribute>
         <name>style</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: CSS styling instructions.</description>
      </attribute>
      <attribute>
         <name>title</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: An advisory title for this element.  Often used by the user agent as a tooltip.</description>
      </attribute>
      <attribute>
         <name>styleClass</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>The CSS class for this element.  Corresponds to the HTML 'class' attribute.</description>
      </attribute>
      <!-- HTML 4.0 event-handler attributes -->
      <attribute>
         <name>onclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is clicked.</description>
      </attribute>
      <attribute>
         <name>ondblclick</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the element is double-clicked.</description>
      </attribute>
      <attribute>
         <name>onmousedown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is released over this element.</description>
      </attribute>
      <attribute>
         <name>onmouseover</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved into this element.</description>
      </attribute>
      <attribute>
         <name>onmousemove</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moved while it is in this element.</description>
      </attribute>
      <attribute>
         <name>onmouseout</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when the pointing device is moves out of this element.</description>
      </attribute>
      <attribute>
         <name>onkeypress</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed over this element.</description>
      </attribute>
      <attribute>
         <name>onkeydown</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is pressed down over this element.</description>
      </attribute>
      <attribute>
         <name>onkeyup</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Script to be invoked when a key is released over this element.</description>
      </attribute>
      <!-- HTML 4.0 input attributes -->
      <attribute>
         <name>accesskey</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Sets the access key for this element.</description>
      </attribute>
      <attribute>
         <name>align</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <description>HTML: Specifies the horizontal alignment of this element.  Deprecated in HTML 4.01.</description>
      </attribute>
      <attribute>
         <name>alt</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies alternative text that can be used by a browser that can't show this element.</description>
      </attribute>
      <attribute>
         <name>disabled</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: When true, this element cannot receive focus.</description>
      </attribute>
      <attribute>
         <name>onblur</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element loses focus.</description>
      </attribute>
      <attribute>
         <name>onfocus</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element receives focus.</description>
      </attribute>
      <attribute>
         <name>onchange</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is modified.</description>
      </attribute>
      <attribute>
         <name>onselect</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies a script to be invoked when the element is selected.</description>
      </attribute>
      <attribute>
         <name>readonly</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        HTML: When true, indicates that this component cannot be modified by the user.
        The element may receive focus unless it has also been disabled.
    </description>
      </attribute>
      <attribute>
         <name>tabindex</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: Specifies the position of this element within the tab order of the document.</description>
      </attribute>
      <attribute>
         <name>maxlength</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The maximum number of characters allowed to be entered.</description>
      </attribute>
      <attribute>
         <name>size</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>HTML: The initial width of this control, in characters.</description>
      </attribute>
      <attribute>
         <name>preferredPasswordLength</name>
         <required>true</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>The prefered length of the password</description>
      </attribute>
      <attribute>
         <name>textStrengthDescriptions</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>The text strength descriptions</description>
      </attribute>
      <attribute>
         <name>prefixText</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>The prefix of the component message</description>
      </attribute>
      <attribute>
         <name>showDetails</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>This flag {true | false} determines whether to show the details (left characters). default is true</description>
      </attribute>
      <attribute>
         <name>strengthIndicatorType</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>This flag determines the indicator type. It can be {text or bar}. Default is text</description>
      </attribute>
      <attribute>
         <name>useCustomSecurity</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>
	      	This flag determines whether to user custom security rules instead
	      	of just depending on the password length. The default is false.
	      </description>
      </attribute>
      <attribute>
         <name>customSecurityExpression</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>
	      		This string determines the expression of the custom security rule of the password
				Note that the expression has the following format :
				*******************************************************
				S (Number)  N (Number) A (Number)
				Where S stands for Symbols
				Where N stands for Numbers
				Where A stands for Alphabets
				*******************************************************
				For example) A4N2S3A2
				Means that the password will be as following :
				4 or more Alphabets followed by
				2 or more Numbers followed by
				3 or more Symbols followed by
				2 or more Alphabets
				*******************************************************
				Note also that the useCustomSecurity should be set to true.
	      </description>
      </attribute>
      <attribute>
         <name>penaltyRatio</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>
	      	This attribute determines the penalty ratio that will decrease the password
	      	Strength if the custom security expression is not met.
			Note also that the useCustomSecurity should be set to true to apply this flag.
			Possible values from 0 to 100.
			Default value is 50.
	      </description>
      </attribute>
   </tag>
   <tag>
      <name>captcha</name>
      <tag-class>org.apache.myfaces.custom.captcha.CAPTCHATag</tag-class>
      <body-content>JSP</body-content>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>captchaSessionKeyName</name>
         <required>true</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>
			Determines the CAPTCHA session key name.
	      </description>
      </attribute>
      <attribute>
         <name>imageWidth</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <description>
			Integer to indicate the CAPTCHA width. default is 290.
	      </description>
      </attribute>
      <attribute>
         <name>imageHeight</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <description>
			Integer to indicate the CAPTCHA height. default is 81.
	      </description>
      </attribute>
   </tag>
   <tag>
      <name>media</name>
      <tag-class>org.apache.myfaces.custom.media.MediaTag</tag-class>
      <body-content>JSP</body-content>
      <!-- UIComponent attributes -->
      <attribute>
         <name>id</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        The developer-assigned ID of this component.  The ID must be unique
        within the scope of the tag's enclosing naming container (e.g. 
        h:form or f:subview).  This value must be a static value.
    </description>
      </attribute>
      <attribute>
         <name>binding</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        Identifies a backing bean property (of type UIComponent or appropriate
        subclass) to bind to this component instance.  This value must be an
        EL expression.
    </description>
      </attribute>
      <attribute>
         <name>rendered</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>
        A boolean value that indicates whether this component should be rendered.
        Default value: true.
    </description>
      </attribute>
      <attribute>
         <name>source</name>
         <required>true</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>
			Determines the path of the media file.
	      </description>
      </attribute>
      <attribute>
         <name>contentType</name>
         <required>true</required>
         <rtexprvalue>true</rtexprvalue>
         <type>java.lang.String</type>
         <description>
			Determines the media content type.
	      </description>
      </attribute>
      <attribute>
         <name>width</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <description>
			Integer to indicate the media weight.
	      </description>
      </attribute>
      <attribute>
         <name>height</name>
         <required>false</required>
         <rtexprvalue>true</rtexprvalue>
         <description>
			Integer to indicate the media height.
	      </description>
      </attribute>
   </tag>
   <tag>
      <name>exporterActionListener</name>
      <tag-class>org.apache.myfaces.custom.exporter.ExporterActionListenerTag</tag-class>
      <body-content>JSP</body-content>
      <!-- &ui_component_attributes; -->
      <attribute>
         <name>for</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Id of the datatable component whose values to be exported</description>
      </attribute>
      <attribute>
         <name>filename</name>
         <required>false</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>Default name of the generated excel or pdf file, if not specified value of the "for" attribute will be used</description>
      </attribute>
      <attribute>
         <name>fileType</name>
         <required>true</required>
         <rtexprvalue>false</rtexprvalue>
         <type>java.lang.String</type>
         <description>"PDF" or "XLS"</description>
      </attribute>
   </tag>
</taglib>