<?xml version="1.0" encoding="utf-8"?>

<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
-->

<faces-config xmlns="http://java.sun.com/xml/ns/javaee" 
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
              xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd" 
              version="2.0">

$baseContent

#set ($componentList = ${model.getComponents()})
#foreach( $component in $componentList )
#if ($modelIds.contains($component.modelId) 
    && !($component.className.contains("UIComponent"))
    && !($component.isConfigExcluded()))
  <component>
    <component-type>$component.type</component-type>
    <component-class>$component.className</component-class>
  </component>    
#end
#end
#set ($converterList = ${model.getConverters()})
#foreach( $converter in $converterList )
#if ($modelIds.contains($converter.modelId))
  <converter>
    <converter-id>$converter.converterId</converter-id>
    <converter-class>$converter.className</converter-class>
  </converter>
#end
#end
#set ($validatorList = ${model.getValidators()})
#foreach( $validator in $validatorList )
#if ($modelIds.contains($validator.modelId) &&
    !($validator.isConfigExcluded().booleanValue()) &&
    $validator.validatorId)
  <validator>
    <validator-id>$validator.validatorId</validator-id>
    <validator-class>$validator.className</validator-class>
  </validator>
#end
#end
#set ($behaviorList = ${model.getBehaviors()})
#foreach( $behavior in $behaviorList )
#if ($modelIds.contains($behavior.modelId))
  <behavior>
    <behavior-id>$behavior.behaviorId</behavior-id>
    <behavior-class>$behavior.className</behavior-class>
  </behavior>
#end
#end
#set ($renderKitList = ${model.getRenderKits()})
#foreach( $renderKit in $renderKitList )
  <render-kit>
    <render-kit-id>$renderKit.renderKitId</render-kit-id>
#if ($renderKit.className)
    <render-kit-class>$renderKit.className</render-kit-class>
#end
#set ($rendererList = ${renderKit.getRenderers()})
#foreach( $renderer in $rendererList )
      <renderer>
        <component-family>$renderer.componentFamily</component-family>
        <renderer-type>$renderer.rendererType</renderer-type>
        <renderer-class>$renderer.className</renderer-class>
      </renderer>
#end
#set ($clientBehaviorRendererList = ${renderKit.getClientBehaviorRenderers()})
#foreach( $clientBehaviorRenderer in $clientBehaviorRendererList )
      <client-behavior-renderer>
        <client-behavior-renderer-type>$clientBehaviorRenderer.rendererType</client-behavior-renderer-type>
        <client-behavior-renderer-class>$clientBehaviorRenderer.className</client-behavior-renderer-class>
      </client-behavior-renderer>
#end
  </render-kit>
#end
</faces-config>
